{"version":3,"sources":["logo.svg","Tokenizer.js","pearson-correlation.js","Table.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","width","marginTop","spacing","marginLeft","marginRight","filter","Tokenizer","props","classes","className","Autocomplete","multiple","id","options","COLUMNS","getOptionLabel","option","title","value","filterSelectedOptions","onChange","renderInput","params","TextField","variant","label","placeholder","pearsonCorrelation","xs","ys","Array","isArray","Error","length","sx","sy","sxx","syy","sxy","n","i","x","y","Math","sqrt","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","order","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","TableRow","TableCell","padding","map","headCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","component","totalRecords","RECORDS","toFixed","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","filters","records","forEach","record","relevantRows","every","virtualColumn","reduce","acc","rows","column","count","currentColumn","name","corr","support","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","fetishesOnly","setFetishesOnly","ageHundred","setAgeHundred","ageTypicalBucket","setAgeTypicalBucket","rowsPerPage","setRowsPerPage","row","some","trait","includes","ages","emptyRows","min","totalAgesCount","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","relevantAgesCount","e","age","computeBuckets","releventAgeBuckets","totalAgeBuckets","Object","keys","sort","Paper","TableContainer","Table","aria-labelledby","size","aria-label","target","checked","newSelecteds","TableBody","array","comparator","stabilizedThis","el","index","stableSort","getComparator","slice","isItemSelected","find","labelId","hover","onRowClick","role","aria-checked","tabIndex","scope","style","colSpan","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","chartType","data","hAxis","ticks","bar","groupWidth","colors","isStacked","contents","DEFAULT_VALUE","ReactGA","initialize","pageview","window","location","pathname","search","App","match","defaultValue","JSON","parse","setRawFilters","setFilters","newFilters","urlFilters","findIndex","history","pushState","encodeURI","stringify","rowName","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.14c7a048.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport COLUMNS from './columns.json';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 1000,\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  filter: {\r\n    marginTop: 30,\r\n  }\r\n}));\r\n\r\nexport default function Tokenizer(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Autocomplete\r\n        multiple\r\n        id=\"tags-outlined\"\r\n        options={COLUMNS}\r\n        getOptionLabel={(option) => option.title}\r\n        value={props.value}\r\n        filterSelectedOptions\r\n        onChange={props.onChange}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"outlined\"\r\n            label=\"Filters\"\r\n            placeholder=\"Traits\"\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default function pearsonCorrelation(xs, ys) {\r\n  if (!Array.isArray(xs)) {\r\n    throw new Error(`xs is not array`);\r\n  }\r\n  if (!Array.isArray(ys)) {\r\n    throw new Error(`ys is not array`);\r\n  }\r\n  if (xs.length !== ys.length) {\r\n    throw new Error(`arr len ${xs.length} mismatch len ${ys.length}`);\r\n  }\r\n\r\n  let sx = 0.0;\r\n  let sy = 0.0;\r\n  let sxx = 0.0;\r\n  let syy = 0.0;\r\n  let sxy = 0.0;\r\n\r\n  let n = xs.length;\r\n\r\n  for (let i = 0; i < n; i++) {\r\n    const x = xs[i];\r\n    const y = ys[i];\r\n\r\n    sx += x; // sum\r\n    sy += y; // sum\r\n    sxx += x * x; // sum\r\n    syy += y * y; // sum\r\n    sxy += x * y; // and\r\n  }\r\n\r\n  // covariation\r\n  const cov = sxy / n - sx * sy / n / n;\r\n  // standard error of x\r\n  const sigmax = Math.sqrt(sxx / n -  sx * sx / n / n);\r\n  // standard error of y\r\n  const sigmay = Math.sqrt(syy / n -  sy * sy / n / n);\r\n\r\n  // correlation is just a normalized covariation\r\n  return cov / sigmax / sigmay;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport RECORDS from './anonymized_responses.json';\r\nimport COLUMNS from './columns.json';\r\nimport pearsonCorrelation from './pearson-correlation';\r\nimport Chart from \"react-google-charts\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Trait' },\r\n  { id: 'corr', numeric: true, disablePadding: false, label: 'Correlation' },\r\n  { id: 'support', numeric: true, disablePadding: false, label: 'Percent' },\r\n  { id: 'count', numeric: true, disablePadding: false, label: 'Count' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          {/* <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          /> */}\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'desc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              <b>{headCell.label}</b>\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Respondents {(props.totalRecords !== RECORDS.length) && `(${(props.totalRecords / RECORDS.length * 100).toFixed(2)}%)` } ({props.totalRecords})\r\n        </Typography>\r\n      )}\r\n\r\n      {/* {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )} */}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const {filters} = props;\r\n\r\n  let records = RECORDS;\r\n  filters.forEach(filter => {\r\n    records = records.filter(record => record[filter.title] === 1);\r\n  });\r\n  const totalRecords = records.length;\r\n\r\n  const relevantRows = RECORDS.filter(record => filters.every(filter => record[filter.title] !== null));\r\n  const virtualColumn = relevantRows.map(record => filters.reduce((acc, filter) => record[filter.title] + acc, 0));\r\n\r\n  let rows = COLUMNS.map(column => {\r\n    const count = records.filter(record => record[column.title] === 1).length;\r\n\r\n    const currentColumn = relevantRows.map(record => record[column.title]);\r\n\r\n    return {\r\n      name: column.title,\r\n      corr: pearsonCorrelation(virtualColumn, currentColumn),\r\n      support: count / totalRecords,\r\n      count,\r\n    };\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('desc');\r\n  const [orderBy, setOrderBy] = React.useState('support');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [fetishesOnly, setFetishesOnly] = React.useState(true);\r\n  const [ageHundred, setAgeHundred] = React.useState(false);\r\n  const [ageTypicalBucket, setAgeTypicalBucket] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy !== property || order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeFetishesOnly = (event) => {\r\n    setFetishesOnly(event.target.checked);\r\n  };\r\n\r\n  if (fetishesOnly) {\r\n    rows = rows.filter(row => [\"Trigger\", \"Trigger Feature\", \"Emotion\", \"Pre-TG\", \"Post-TG\", \"Sex\", \"Environment\", \"Partner\", \"Scenario\"].some(trait => row.name.includes(trait + \":\")));\r\n  }\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  // dumb\r\n  const totalAgesCount = {13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0};\r\n  const relevantAgesCount = {13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0};\r\n\r\n  RECORDS.forEach(e => {\r\n    const age = e[\"Age\"];\r\n    totalAgesCount[age] += 1;\r\n  });\r\n  records.forEach(e => {\r\n    const age = e[\"Age\"];\r\n    relevantAgesCount[age] += 1;\r\n  });\r\n  let ages;\r\n\r\n  if (!ageTypicalBucket) {\r\n    ages = Object.keys(relevantAgesCount).sort().map(age => [age, relevantAgesCount[age], totalAgesCount[age] - relevantAgesCount[age]]);\r\n  } else {\r\n    function computeBuckets(a) {\r\n      return {\r\n        '13-17': a[13] + a[14] + a[15] + a[16] + a[17],\r\n        '18-24': a[18] + a[19] + a[20] + a[21] + a[22] + a[23] + a[24],\r\n        '25-29': a[25] + a[26] + a[27] + a[28] + a[29],\r\n        '30-34': a[30] + a[31] + a[32] + a[33] + a[34],\r\n        '35-39': a[35] + a[36] + a[37] + a[38] + a[39],\r\n        '40-44': a[40] + a[41] + a[42] + a[43] + a[44],\r\n        '45-49': a[45] + a[46] + a[47] + a[48] + a[49],\r\n        '50-54': a[50] + a[51] + a[52] + a[53] + a[54],\r\n      };\r\n    }\r\n\r\n    const releventAgeBuckets = computeBuckets(relevantAgesCount);\r\n    const totalAgeBuckets = computeBuckets(totalAgesCount);\r\n\r\n    ages = [\r\n      ['13-17', releventAgeBuckets['13-17'], totalAgeBuckets['13-17'] - releventAgeBuckets['13-17']],\r\n      ['18-24', releventAgeBuckets['18-24'], totalAgeBuckets['18-24'] - releventAgeBuckets['18-24']],\r\n      ['25-29', releventAgeBuckets['25-29'], totalAgeBuckets['25-29'] - releventAgeBuckets['25-29']],\r\n      ['30-34', releventAgeBuckets['30-34'], totalAgeBuckets['30-34'] - releventAgeBuckets['30-34']],\r\n      ['35-39', releventAgeBuckets['35-39'], totalAgeBuckets['35-39'] - releventAgeBuckets['35-39']],\r\n      ['40-44', releventAgeBuckets['40-44'], totalAgeBuckets['40-44'] - releventAgeBuckets['40-44']],\r\n      ['45-49', releventAgeBuckets['45-49'], totalAgeBuckets['45-49'] - releventAgeBuckets['45-49']],\r\n      ['50-54', releventAgeBuckets['50-54'], totalAgeBuckets['50-54'] - releventAgeBuckets['50-54']],\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} totalRecords={totalRecords} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'small'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = filters.find(filter => filter.title === row.name);\r\n\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      // onClick={(event) => handleClick(event, row.name)}\r\n                      onClick={(event) => props.onRowClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        {/* <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        /> */}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.corr.toFixed(2)}</TableCell>\r\n                      <TableCell align=\"right\">{(row.support * 100).toFixed(2)}%</TableCell>\r\n                      <TableCell align=\"right\">{row.count}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 33 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[25, 50, 100, 200, 640]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={fetishesOnly} onChange={handleChangeFetishesOnly} />}\r\n        label=\"Fetishes Only?\"\r\n      />\r\n      <Chart\r\n        height={'400px'}\r\n        chartType=\"ColumnChart\"\r\n        data={[\r\n          ['Age', 'Selected', 'Unselected'],\r\n          ...ages\r\n        ]}\r\n        options={{\r\n          title: 'Age of selected group',\r\n          hAxis: {\r\n            ticks: [13, 15, 20],\r\n          },\r\n          bar: {\r\n            groupWidth: '100%',\r\n          },\r\n          colors: ['#3366cc', '#bbddee'],\r\n          isStacked: ageHundred ? 'percent' : true,\r\n        }}\r\n      />\r\n      <FormControlLabel\r\n        control={<Switch checked={ageHundred} onChange={(event) => {\r\n          setAgeHundred(event.target.checked);\r\n        }} />}\r\n        label=\"100%?\"\r\n      />\r\n      <FormControlLabel\r\n        control={<Switch checked={ageTypicalBucket} onChange={(event) => {\r\n          setAgeTypicalBucket(event.target.checked);\r\n        }} />}\r\n        label=\"Groups?\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import ReactGA from 'react-ga';\r\n\r\nimport React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Tokenizer from './Tokenizer.js';\r\nimport Table from './Table.js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport COLUMNS from './columns.json';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  contents: {\r\n    width: 1000,\r\n    marginTop: 30,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  }\r\n}));\r\n\r\nconst DEFAULT_VALUE = [];\r\n\r\nReactGA.initialize('UA-162934767-2');\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const match = window.location.search.match(/filters=(\\[[\\d,]+\\])/);\r\n  let defaultValue = DEFAULT_VALUE;\r\n  if (match) {\r\n    defaultValue = JSON.parse(match[1]).map(index => COLUMNS[index]);\r\n  }\r\n  const [filters, setRawFilters] = React.useState(defaultValue);\r\n\r\n  const setFilters = (newFilters) => {\r\n    setRawFilters(newFilters);\r\n\r\n    const urlFilters = newFilters.map(filter => COLUMNS.findIndex(column => column.title === filter.title)).sort();\r\n    if (newFilters.length !== 0) {\r\n      window.history.pushState(urlFilters, 'Title', `/?filters=${encodeURI(JSON.stringify(urlFilters))}`);\r\n    } else {\r\n      window.history.pushState(urlFilters, 'Title', `/`);\r\n    }\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={classes.contents}>\r\n        <Tokenizer value={filters} onChange={(e, value) => {\r\n          setFilters(value);\r\n        }} />\r\n        <Table filters={filters} onRowClick={(e, rowName) => {\r\n          if (filters.find(filter => filter.title === rowName)) {\r\n            setFilters(filters.filter(filter => filter.title !== rowName));\r\n          } else {\r\n            const filter = COLUMNS.find(filter => filter.title === rowName);\r\n            setFilters([...filters, filter]);\r\n          }\r\n        }} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}